package com.example.ud_quizzi.view;

import com.example.ud_quizzi.controller.ExamController;
import com.example.ud_quizzi.model.Exam;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.stage.Stage;

import java.io.IOException;
import java.sql.Connection;
import java.util.Date;
import java.util.List;
import java.util.Optional;

public class ManageExamController {

    @FXML
    private TableView<Exam> tableExams;
    @FXML
    private TableColumn<Exam, String> colName;
    @FXML
    private TableColumn<Exam, Date> colDate;
    @FXML
    private TableColumn<Exam, String> colTime;

    private ExamController examController;
    private ObservableList<Exam> examList;

    @FXML
    private void initialize() {
        colName.setCellValueFactory(new PropertyValueFactory<>("examName"));
        colDate.setCellValueFactory(new PropertyValueFactory<>("createdDate"));
        colTime.setCellValueFactory(new PropertyValueFactory<>("testTime"));
    }

    /**
     * Nh·∫≠n connection t·ª´ m√†n h√¨nh cha (sau khi ƒëƒÉng nh·∫≠p)
     */
    public void setConnection(Connection conn) {
        this.examController = new ExamController(conn);
        loadExams();
    }

    /**
     * T·∫£i danh s√°ch ƒë·ªÅ thi t·ª´ CSDL
     */
    private void loadExams() {
        try {
            if (examController != null) {
                List<Exam> list = examController.getAllExams();
                examList = FXCollections.observableArrayList(list);
                tableExams.setItems(examList);
            } else {
                showAlert(Alert.AlertType.WARNING, "‚ùó H·ªá th·ªëng ch∆∞a k·∫øt n·ªëi CSDL!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            showAlert(Alert.AlertType.ERROR, "‚ùå Kh√¥ng th·ªÉ t·∫£i danh s√°ch ƒë·ªÅ thi!");
        }
    }

    /**
     * M·ªü form th√™m ƒë·ªÅ thi m·ªõi
     */
    @FXML
    private void handleAdd() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/ud_quizzi/view/AddExamScreen.fxml"));
            Parent root = loader.load();

            AddExamController addController = loader.getController();

            if (this.examController == null) {
                showAlert(Alert.AlertType.ERROR, "‚ùå Ch∆∞a kh·ªüi t·∫°o k·∫øt n·ªëi CSDL!");
                return;
            }

            // üîπ Truy·ªÅn connection cho form th√™m ƒë·ªÅ thi
            addController.setConnection(this.examController.getConnection());

            // üîπ Cho ph√©p form con reload b·∫£ng sau khi th√™m xong
            addController.setManageController(this);

            Stage stage = new Stage();
            stage.setTitle("Th√™m ƒê·ªÅ Thi");
            stage.setScene(new Scene(root));
            stage.show();

        } catch (IOException e) {
            e.printStackTrace();
            showAlert(Alert.AlertType.ERROR, "‚ùå Kh√¥ng th·ªÉ m·ªü giao di·ªán th√™m ƒë·ªÅ thi!");
        }
    }

    /**
     * X√≥a ƒë·ªÅ thi (n·∫øu c·∫ßn l√†m sau)
     */
    @FXML
    private void handleDelete(ActionEvent event) {
        Exam selected = tableExams.getSelectionModel().getSelectedItem();
        if (selected == null) {
            showAlert(Alert.AlertType.WARNING, "Vui l√≤ng ch·ªçn ƒë·ªÅ thi ƒë·ªÉ x√≥a!");
            return;
        }

        Alert confirm = new Alert(Alert.AlertType.CONFIRMATION);
        confirm.setTitle("X√°c nh·∫≠n x√≥a");
        confirm.setHeaderText(null);
        confirm.setContentText("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ƒë·ªÅ thi \"" + selected.getExamName() + "\" ?");
        Optional<ButtonType> result = confirm.showAndWait();

        if (result.isPresent() && result.get() == ButtonType.OK) {
            boolean success = examController.deleteExam(selected.getExamID());
            if (success) {
                showAlert(Alert.AlertType.INFORMATION, "‚úÖ ƒê√£ x√≥a ƒë·ªÅ thi!");
                loadExams();
            } else {
                showAlert(Alert.AlertType.ERROR, "‚ùå Kh√¥ng th·ªÉ x√≥a ƒë·ªÅ thi!");
            }
        }
    }

    @FXML
    private void handleBack(ActionEvent event) {
        Stage stage = (Stage) tableExams.getScene().getWindow();
        stage.close();
    }

    private void showAlert(Alert.AlertType type, String message) {
        Alert alert = new Alert(type);
        alert.setTitle("Th√¥ng b√°o");
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

    public void refreshTable() {
        loadExams();
    }
}
